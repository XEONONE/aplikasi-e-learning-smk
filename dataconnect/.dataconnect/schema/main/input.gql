"""
✨ `Assignment_KeyOutput` returns the primary key fields of table type `Assignment`.

It has the same format as `Assignment_Key`, but is only used as mutation return value.
"""
scalar Assignment_KeyOutput
"""
✨ `Course_KeyOutput` returns the primary key fields of table type `Course`.

It has the same format as `Course_Key`, but is only used as mutation return value.
"""
scalar Course_KeyOutput
"""
✨ `Enrollment_KeyOutput` returns the primary key fields of table type `Enrollment`.

It has the same format as `Enrollment_Key`, but is only used as mutation return value.
"""
scalar Enrollment_KeyOutput
"""
✨ `Lesson_KeyOutput` returns the primary key fields of table type `Lesson`.

It has the same format as `Lesson_Key`, but is only used as mutation return value.
"""
scalar Lesson_KeyOutput
"""
✨ `Module_KeyOutput` returns the primary key fields of table type `Module`.

It has the same format as `Module_Key`, but is only used as mutation return value.
"""
scalar Module_KeyOutput
"""
✨ `Submission_KeyOutput` returns the primary key fields of table type `Submission`.

It has the same format as `Submission_Key`, but is only used as mutation return value.
"""
scalar Submission_KeyOutput
"""
✨ `User_KeyOutput` returns the primary key fields of table type `User`.

It has the same format as `User_Key`, but is only used as mutation return value.
"""
scalar User_KeyOutput
"""
✨ Generated data input type for table 'Assignment'. It includes all necessary fields for creating or upserting rows into table.
"""
input Assignment_Data {
  """
  ✨ Generated from Field `Assignment`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Assignment`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Assignment`.`moduleId` of type `UUID`
  """
  moduleId: UUID
  """
  ✨ `_expr` server value variant of `moduleId` (✨ Generated from Field `Assignment`.`moduleId` of type `UUID`)
  """
  moduleId_expr: UUID_Expr
  """
  ✨ Generated from Field `Assignment`.`module` of type `Module`
  """
  module: Module_Key
  """
  ✨ Generated from Field `Assignment`.`description` of type `String!`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Assignment`.`description` of type `String!`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Assignment`.`dueDate` of type `Date!`
  """
  dueDate: Date
  """
  ✨ `_date` server value variant of `dueDate` (✨ Generated from Field `Assignment`.`dueDate` of type `Date!`)
  """
  dueDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `dueDate` (✨ Generated from Field `Assignment`.`dueDate` of type `Date!`)
  """
  dueDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `dueDate` (✨ Generated from Field `Assignment`.`dueDate` of type `Date!`)
  """
  dueDate_update: [Date_Update!]
  """
  ✨ Generated from Field `Assignment`.`maxScore` of type `Int!`
  """
  maxScore: Int
  """
  ✨ `_expr` server value variant of `maxScore` (✨ Generated from Field `Assignment`.`maxScore` of type `Int!`)
  """
  maxScore_expr: Int_Expr
  """
  ✨ `_update` server value variant of `maxScore` (✨ Generated from Field `Assignment`.`maxScore` of type `Int!`)
  """
  maxScore_update: [Int_Update!]
  """
  ✨ Generated from Field `Assignment`.`title` of type `String!`
  """
  title: String
  """
  ✨ `_expr` server value variant of `title` (✨ Generated from Field `Assignment`.`title` of type `String!`)
  """
  title_expr: String_Expr
  """
  ✨ Generated from Field `Assignment`.`type` of type `String!`
  """
  type: String
  """
  ✨ `_expr` server value variant of `type` (✨ Generated from Field `Assignment`.`type` of type `String!`)
  """
  type_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Assignment'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Assignment_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Assignment_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Assignment_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Assignment_Filter!]
  """
  ✨ Generated from Field `Assignment`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Assignment`.`moduleId` of type `UUID`
  """
  moduleId: UUID_Filter
  """
  ✨ Generated from Field `Assignment`.`module` of type `Module`
  """
  module: Module_Filter
  """
  ✨ Generated from Field `Assignment`.`description` of type `String!`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Assignment`.`dueDate` of type `Date!`
  """
  dueDate: Date_Filter
  """
  ✨ Generated from Field `Assignment`.`maxScore` of type `Int!`
  """
  maxScore: Int_Filter
  """
  ✨ Generated from Field `Assignment`.`title` of type `String!`
  """
  title: String_Filter
  """
  ✨ Generated from Field `Assignment`.`type` of type `String!`
  """
  type: String_Filter
  """
  ✨ Generated from Field `Assignment`.`submissions_on_assignment` of type `[Submission!]!`
  """
  submissions_on_assignment: Submission_ListFilter
  """
  ✨ Generated from Field `Assignment`.`users_via_Submission` of type `[User!]!`
  """
  users_via_Submission: User_ListFilter
}
"""
✨ Generated first-row input type for table 'Assignment'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Assignment_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Assignment_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Assignment_Filter
}
"""
✨ Generated having input type for table 'Assignment'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Assignment_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Assignment_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Assignment_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Assignment_Having!]
  """
  ✨ Generated from Field `Assignment`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Assignment`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Assignment`.`dueDate_count` of type `Int!`
  """
  dueDate_count: Int_Filter
  """
  ✨ Generated from Field `Assignment`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Assignment`.`maxScore_count` of type `Int!`
  """
  maxScore_count: Int_Filter
  """
  ✨ Generated from Field `Assignment`.`moduleId_count` of type `Int!`
  """
  moduleId_count: Int_Filter
  """
  ✨ Generated from Field `Assignment`.`title_count` of type `Int!`
  """
  title_count: Int_Filter
  """
  ✨ Generated from Field `Assignment`.`type_count` of type `Int!`
  """
  type_count: Int_Filter
  """
  ✨ Generated from Field `Assignment`.`maxScore_sum` of type `Int`
  """
  maxScore_sum: Int_Filter
  """
  ✨ Generated from Field `Assignment`.`maxScore_avg` of type `Float`
  """
  maxScore_avg: Float_Filter
  """
  ✨ Generated from Field `Assignment`.`dueDate_min` of type `Date`
  """
  dueDate_min: Date_Filter
  """
  ✨ Generated from Field `Assignment`.`maxScore_min` of type `Int`
  """
  maxScore_min: Int_Filter
  """
  ✨ Generated from Field `Assignment`.`dueDate_max` of type `Date`
  """
  dueDate_max: Date_Filter
  """
  ✨ Generated from Field `Assignment`.`maxScore_max` of type `Int`
  """
  maxScore_max: Int_Filter
}
"""
✨ Generated key input type for table 'Assignment'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Assignment_Key {
  """
  ✨ Generated from Field `Assignment`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Assignment`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Assignment'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Assignment_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Assignment_Filter
}
"""
✨ Generated order input type for table 'Assignment'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Assignment_Order {
  """
  ✨ Generated from Field `Assignment`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`moduleId` of type `UUID`
  """
  moduleId: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`module` of type `Module`
  """
  module: Module_Order
  """
  ✨ Generated from Field `Assignment`.`description` of type `String!`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`dueDate` of type `Date!`
  """
  dueDate: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`maxScore` of type `Int!`
  """
  maxScore: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`title` of type `String!`
  """
  title: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`type` of type `String!`
  """
  type: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`description_count` of type `Int!`
  """
  description_count: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`dueDate_count` of type `Int!`
  """
  dueDate_count: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`maxScore_count` of type `Int!`
  """
  maxScore_count: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`moduleId_count` of type `Int!`
  """
  moduleId_count: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`title_count` of type `Int!`
  """
  title_count: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`type_count` of type `Int!`
  """
  type_count: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`maxScore_sum` of type `Int`
  """
  maxScore_sum: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`maxScore_avg` of type `Float`
  """
  maxScore_avg: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`dueDate_min` of type `Date`
  """
  dueDate_min: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`maxScore_min` of type `Int`
  """
  maxScore_min: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`dueDate_max` of type `Date`
  """
  dueDate_max: OrderDirection
  """
  ✨ Generated from Field `Assignment`.`maxScore_max` of type `Int`
  """
  maxScore_max: OrderDirection
}
"""
✨ Generated data input type for table 'Course'. It includes all necessary fields for creating or upserting rows into table.
"""
input Course_Data {
  """
  ✨ Generated from Field `Course`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Course`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Course`.`instructorId` of type `UUID`
  """
  instructorId: UUID
  """
  ✨ `_expr` server value variant of `instructorId` (✨ Generated from Field `Course`.`instructorId` of type `UUID`)
  """
  instructorId_expr: UUID_Expr
  """
  ✨ Generated from Field `Course`.`instructor` of type `User`
  """
  instructor: User_Key
  """
  ✨ Generated from Field `Course`.`category` of type `String!`
  """
  category: String
  """
  ✨ `_expr` server value variant of `category` (✨ Generated from Field `Course`.`category` of type `String!`)
  """
  category_expr: String_Expr
  """
  ✨ Generated from Field `Course`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Course`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Course`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Course`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Course`.`description` of type `String!`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Course`.`description` of type `String!`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Course`.`difficultyLevel` of type `String!`
  """
  difficultyLevel: String
  """
  ✨ `_expr` server value variant of `difficultyLevel` (✨ Generated from Field `Course`.`difficultyLevel` of type `String!`)
  """
  difficultyLevel_expr: String_Expr
  """
  ✨ Generated from Field `Course`.`thumbnailUrl` of type `String`
  """
  thumbnailUrl: String
  """
  ✨ `_expr` server value variant of `thumbnailUrl` (✨ Generated from Field `Course`.`thumbnailUrl` of type `String`)
  """
  thumbnailUrl_expr: String_Expr
  """
  ✨ Generated from Field `Course`.`title` of type `String!`
  """
  title: String
  """
  ✨ `_expr` server value variant of `title` (✨ Generated from Field `Course`.`title` of type `String!`)
  """
  title_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Course'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Course_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Course_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Course_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Course_Filter!]
  """
  ✨ Generated from Field `Course`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Course`.`instructorId` of type `UUID`
  """
  instructorId: UUID_Filter
  """
  ✨ Generated from Field `Course`.`instructor` of type `User`
  """
  instructor: User_Filter
  """
  ✨ Generated from Field `Course`.`category` of type `String!`
  """
  category: String_Filter
  """
  ✨ Generated from Field `Course`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Course`.`description` of type `String!`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Course`.`difficultyLevel` of type `String!`
  """
  difficultyLevel: String_Filter
  """
  ✨ Generated from Field `Course`.`thumbnailUrl` of type `String`
  """
  thumbnailUrl: String_Filter
  """
  ✨ Generated from Field `Course`.`title` of type `String!`
  """
  title: String_Filter
  """
  ✨ Generated from Field `Course`.`enrollments_on_course` of type `[Enrollment!]!`
  """
  enrollments_on_course: Enrollment_ListFilter
  """
  ✨ Generated from Field `Course`.`modules_on_course` of type `[Module!]!`
  """
  modules_on_course: Module_ListFilter
  """
  ✨ Generated from Field `Course`.`users_via_Enrollment` of type `[User!]!`
  """
  users_via_Enrollment: User_ListFilter
}
"""
✨ Generated first-row input type for table 'Course'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Course_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Course_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Course_Filter
}
"""
✨ Generated having input type for table 'Course'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Course_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Course_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Course_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Course_Having!]
  """
  ✨ Generated from Field `Course`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Course`.`category_count` of type `Int!`
  """
  category_count: Int_Filter
  """
  ✨ Generated from Field `Course`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Course`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Course`.`difficultyLevel_count` of type `Int!`
  """
  difficultyLevel_count: Int_Filter
  """
  ✨ Generated from Field `Course`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Course`.`instructorId_count` of type `Int!`
  """
  instructorId_count: Int_Filter
  """
  ✨ Generated from Field `Course`.`thumbnailUrl_count` of type `Int!`
  """
  thumbnailUrl_count: Int_Filter
  """
  ✨ Generated from Field `Course`.`title_count` of type `Int!`
  """
  title_count: Int_Filter
  """
  ✨ Generated from Field `Course`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Course`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Course'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Course_Key {
  """
  ✨ Generated from Field `Course`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Course`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Course'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Course_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Course_Filter
}
"""
✨ Generated order input type for table 'Course'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Course_Order {
  """
  ✨ Generated from Field `Course`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Course`.`instructorId` of type `UUID`
  """
  instructorId: OrderDirection
  """
  ✨ Generated from Field `Course`.`instructor` of type `User`
  """
  instructor: User_Order
  """
  ✨ Generated from Field `Course`.`category` of type `String!`
  """
  category: OrderDirection
  """
  ✨ Generated from Field `Course`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Course`.`description` of type `String!`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Course`.`difficultyLevel` of type `String!`
  """
  difficultyLevel: OrderDirection
  """
  ✨ Generated from Field `Course`.`thumbnailUrl` of type `String`
  """
  thumbnailUrl: OrderDirection
  """
  ✨ Generated from Field `Course`.`title` of type `String!`
  """
  title: OrderDirection
  """
  ✨ Generated from Field `Course`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Course`.`category_count` of type `Int!`
  """
  category_count: OrderDirection
  """
  ✨ Generated from Field `Course`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `Course`.`description_count` of type `Int!`
  """
  description_count: OrderDirection
  """
  ✨ Generated from Field `Course`.`difficultyLevel_count` of type `Int!`
  """
  difficultyLevel_count: OrderDirection
  """
  ✨ Generated from Field `Course`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Course`.`instructorId_count` of type `Int!`
  """
  instructorId_count: OrderDirection
  """
  ✨ Generated from Field `Course`.`thumbnailUrl_count` of type `Int!`
  """
  thumbnailUrl_count: OrderDirection
  """
  ✨ Generated from Field `Course`.`title_count` of type `Int!`
  """
  title_count: OrderDirection
  """
  ✨ Generated from Field `Course`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `Course`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
}
"""
✨ Generated data input type for table 'Enrollment'. It includes all necessary fields for creating or upserting rows into table.
"""
input Enrollment_Data {
  """
  ✨ Generated from Field `Enrollment`.`studentId` of type `UUID!`
  """
  studentId: UUID
  """
  ✨ `_expr` server value variant of `studentId` (✨ Generated from Field `Enrollment`.`studentId` of type `UUID!`)
  """
  studentId_expr: UUID_Expr
  """
  ✨ Generated from Field `Enrollment`.`courseId` of type `UUID!`
  """
  courseId: UUID
  """
  ✨ `_expr` server value variant of `courseId` (✨ Generated from Field `Enrollment`.`courseId` of type `UUID!`)
  """
  courseId_expr: UUID_Expr
  """
  ✨ Generated from Field `Enrollment`.`course` of type `Course!`
  """
  course: Course_Key
  """
  ✨ Generated from Field `Enrollment`.`student` of type `User!`
  """
  student: User_Key
  """
  ✨ Generated from Field `Enrollment`.`completionDate` of type `Timestamp`
  """
  completionDate: Timestamp
  """
  ✨ `_expr` server value variant of `completionDate` (✨ Generated from Field `Enrollment`.`completionDate` of type `Timestamp`)
  """
  completionDate_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `completionDate` (✨ Generated from Field `Enrollment`.`completionDate` of type `Timestamp`)
  """
  completionDate_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `completionDate` (✨ Generated from Field `Enrollment`.`completionDate` of type `Timestamp`)
  """
  completionDate_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Enrollment`.`enrollmentDate` of type `Timestamp!`
  """
  enrollmentDate: Timestamp
  """
  ✨ `_expr` server value variant of `enrollmentDate` (✨ Generated from Field `Enrollment`.`enrollmentDate` of type `Timestamp!`)
  """
  enrollmentDate_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `enrollmentDate` (✨ Generated from Field `Enrollment`.`enrollmentDate` of type `Timestamp!`)
  """
  enrollmentDate_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `enrollmentDate` (✨ Generated from Field `Enrollment`.`enrollmentDate` of type `Timestamp!`)
  """
  enrollmentDate_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Enrollment`.`grade` of type `Int`
  """
  grade: Int
  """
  ✨ `_expr` server value variant of `grade` (✨ Generated from Field `Enrollment`.`grade` of type `Int`)
  """
  grade_expr: Int_Expr
  """
  ✨ `_update` server value variant of `grade` (✨ Generated from Field `Enrollment`.`grade` of type `Int`)
  """
  grade_update: [Int_Update!]
  """
  ✨ Generated from Field `Enrollment`.`status` of type `String!`
  """
  status: String
  """
  ✨ `_expr` server value variant of `status` (✨ Generated from Field `Enrollment`.`status` of type `String!`)
  """
  status_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Enrollment'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Enrollment_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Enrollment_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Enrollment_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Enrollment_Filter!]
  """
  ✨ Generated from Field `Enrollment`.`studentId` of type `UUID!`
  """
  studentId: UUID_Filter
  """
  ✨ Generated from Field `Enrollment`.`courseId` of type `UUID!`
  """
  courseId: UUID_Filter
  """
  ✨ Generated from Field `Enrollment`.`course` of type `Course!`
  """
  course: Course_Filter
  """
  ✨ Generated from Field `Enrollment`.`student` of type `User!`
  """
  student: User_Filter
  """
  ✨ Generated from Field `Enrollment`.`completionDate` of type `Timestamp`
  """
  completionDate: Timestamp_Filter
  """
  ✨ Generated from Field `Enrollment`.`enrollmentDate` of type `Timestamp!`
  """
  enrollmentDate: Timestamp_Filter
  """
  ✨ Generated from Field `Enrollment`.`grade` of type `Int`
  """
  grade: Int_Filter
  """
  ✨ Generated from Field `Enrollment`.`status` of type `String!`
  """
  status: String_Filter
}
"""
✨ Generated first-row input type for table 'Enrollment'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Enrollment_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Enrollment_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Enrollment_Filter
}
"""
✨ Generated having input type for table 'Enrollment'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Enrollment_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Enrollment_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Enrollment_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Enrollment_Having!]
  """
  ✨ Generated from Field `Enrollment`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Enrollment`.`completionDate_count` of type `Int!`
  """
  completionDate_count: Int_Filter
  """
  ✨ Generated from Field `Enrollment`.`courseId_count` of type `Int!`
  """
  courseId_count: Int_Filter
  """
  ✨ Generated from Field `Enrollment`.`enrollmentDate_count` of type `Int!`
  """
  enrollmentDate_count: Int_Filter
  """
  ✨ Generated from Field `Enrollment`.`grade_count` of type `Int!`
  """
  grade_count: Int_Filter
  """
  ✨ Generated from Field `Enrollment`.`status_count` of type `Int!`
  """
  status_count: Int_Filter
  """
  ✨ Generated from Field `Enrollment`.`studentId_count` of type `Int!`
  """
  studentId_count: Int_Filter
  """
  ✨ Generated from Field `Enrollment`.`grade_sum` of type `Int`
  """
  grade_sum: Int_Filter
  """
  ✨ Generated from Field `Enrollment`.`grade_avg` of type `Float`
  """
  grade_avg: Float_Filter
  """
  ✨ Generated from Field `Enrollment`.`completionDate_min` of type `Timestamp`
  """
  completionDate_min: Timestamp_Filter
  """
  ✨ Generated from Field `Enrollment`.`enrollmentDate_min` of type `Timestamp`
  """
  enrollmentDate_min: Timestamp_Filter
  """
  ✨ Generated from Field `Enrollment`.`grade_min` of type `Int`
  """
  grade_min: Int_Filter
  """
  ✨ Generated from Field `Enrollment`.`completionDate_max` of type `Timestamp`
  """
  completionDate_max: Timestamp_Filter
  """
  ✨ Generated from Field `Enrollment`.`enrollmentDate_max` of type `Timestamp`
  """
  enrollmentDate_max: Timestamp_Filter
  """
  ✨ Generated from Field `Enrollment`.`grade_max` of type `Int`
  """
  grade_max: Int_Filter
}
"""
✨ Generated key input type for table 'Enrollment'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Enrollment_Key {
  """
  ✨ Generated from Field `Enrollment`.`studentId` of type `UUID!`
  """
  studentId: UUID
  """
  ✨ `_expr` server value variant of `studentId` (✨ Generated from Field `Enrollment`.`studentId` of type `UUID!`)
  """
  studentId_expr: UUID_Expr
  """
  ✨ Generated from Field `Enrollment`.`courseId` of type `UUID!`
  """
  courseId: UUID
  """
  ✨ `_expr` server value variant of `courseId` (✨ Generated from Field `Enrollment`.`courseId` of type `UUID!`)
  """
  courseId_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Enrollment'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Enrollment_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Enrollment_Filter
}
"""
✨ Generated order input type for table 'Enrollment'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Enrollment_Order {
  """
  ✨ Generated from Field `Enrollment`.`studentId` of type `UUID!`
  """
  studentId: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`courseId` of type `UUID!`
  """
  courseId: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`course` of type `Course!`
  """
  course: Course_Order
  """
  ✨ Generated from Field `Enrollment`.`student` of type `User!`
  """
  student: User_Order
  """
  ✨ Generated from Field `Enrollment`.`completionDate` of type `Timestamp`
  """
  completionDate: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`enrollmentDate` of type `Timestamp!`
  """
  enrollmentDate: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`grade` of type `Int`
  """
  grade: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`status` of type `String!`
  """
  status: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`completionDate_count` of type `Int!`
  """
  completionDate_count: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`courseId_count` of type `Int!`
  """
  courseId_count: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`enrollmentDate_count` of type `Int!`
  """
  enrollmentDate_count: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`grade_count` of type `Int!`
  """
  grade_count: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`status_count` of type `Int!`
  """
  status_count: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`studentId_count` of type `Int!`
  """
  studentId_count: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`grade_sum` of type `Int`
  """
  grade_sum: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`grade_avg` of type `Float`
  """
  grade_avg: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`completionDate_min` of type `Timestamp`
  """
  completionDate_min: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`enrollmentDate_min` of type `Timestamp`
  """
  enrollmentDate_min: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`grade_min` of type `Int`
  """
  grade_min: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`completionDate_max` of type `Timestamp`
  """
  completionDate_max: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`enrollmentDate_max` of type `Timestamp`
  """
  enrollmentDate_max: OrderDirection
  """
  ✨ Generated from Field `Enrollment`.`grade_max` of type `Int`
  """
  grade_max: OrderDirection
}
"""
✨ Generated data input type for table 'Lesson'. It includes all necessary fields for creating or upserting rows into table.
"""
input Lesson_Data {
  """
  ✨ Generated from Field `Lesson`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Lesson`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Lesson`.`moduleId` of type `UUID`
  """
  moduleId: UUID
  """
  ✨ `_expr` server value variant of `moduleId` (✨ Generated from Field `Lesson`.`moduleId` of type `UUID`)
  """
  moduleId_expr: UUID_Expr
  """
  ✨ Generated from Field `Lesson`.`module` of type `Module`
  """
  module: Module_Key
  """
  ✨ Generated from Field `Lesson`.`contentUrl` of type `String!`
  """
  contentUrl: String
  """
  ✨ `_expr` server value variant of `contentUrl` (✨ Generated from Field `Lesson`.`contentUrl` of type `String!`)
  """
  contentUrl_expr: String_Expr
  """
  ✨ Generated from Field `Lesson`.`description` of type `String`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Lesson`.`description` of type `String`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Lesson`.`duration` of type `Int`
  """
  duration: Int
  """
  ✨ `_expr` server value variant of `duration` (✨ Generated from Field `Lesson`.`duration` of type `Int`)
  """
  duration_expr: Int_Expr
  """
  ✨ `_update` server value variant of `duration` (✨ Generated from Field `Lesson`.`duration` of type `Int`)
  """
  duration_update: [Int_Update!]
  """
  ✨ Generated from Field `Lesson`.`orderIndex` of type `Int!`
  """
  orderIndex: Int
  """
  ✨ `_expr` server value variant of `orderIndex` (✨ Generated from Field `Lesson`.`orderIndex` of type `Int!`)
  """
  orderIndex_expr: Int_Expr
  """
  ✨ `_update` server value variant of `orderIndex` (✨ Generated from Field `Lesson`.`orderIndex` of type `Int!`)
  """
  orderIndex_update: [Int_Update!]
  """
  ✨ Generated from Field `Lesson`.`title` of type `String!`
  """
  title: String
  """
  ✨ `_expr` server value variant of `title` (✨ Generated from Field `Lesson`.`title` of type `String!`)
  """
  title_expr: String_Expr
  """
  ✨ Generated from Field `Lesson`.`type` of type `String!`
  """
  type: String
  """
  ✨ `_expr` server value variant of `type` (✨ Generated from Field `Lesson`.`type` of type `String!`)
  """
  type_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Lesson'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Lesson_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Lesson_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Lesson_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Lesson_Filter!]
  """
  ✨ Generated from Field `Lesson`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Lesson`.`moduleId` of type `UUID`
  """
  moduleId: UUID_Filter
  """
  ✨ Generated from Field `Lesson`.`module` of type `Module`
  """
  module: Module_Filter
  """
  ✨ Generated from Field `Lesson`.`contentUrl` of type `String!`
  """
  contentUrl: String_Filter
  """
  ✨ Generated from Field `Lesson`.`description` of type `String`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Lesson`.`duration` of type `Int`
  """
  duration: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`orderIndex` of type `Int!`
  """
  orderIndex: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`title` of type `String!`
  """
  title: String_Filter
  """
  ✨ Generated from Field `Lesson`.`type` of type `String!`
  """
  type: String_Filter
}
"""
✨ Generated first-row input type for table 'Lesson'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Lesson_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Lesson_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Lesson_Filter
}
"""
✨ Generated having input type for table 'Lesson'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Lesson_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Lesson_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Lesson_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Lesson_Having!]
  """
  ✨ Generated from Field `Lesson`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`contentUrl_count` of type `Int!`
  """
  contentUrl_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`duration_count` of type `Int!`
  """
  duration_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`moduleId_count` of type `Int!`
  """
  moduleId_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`orderIndex_count` of type `Int!`
  """
  orderIndex_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`title_count` of type `Int!`
  """
  title_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`type_count` of type `Int!`
  """
  type_count: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`duration_sum` of type `Int`
  """
  duration_sum: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`orderIndex_sum` of type `Int`
  """
  orderIndex_sum: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`duration_avg` of type `Float`
  """
  duration_avg: Float_Filter
  """
  ✨ Generated from Field `Lesson`.`orderIndex_avg` of type `Float`
  """
  orderIndex_avg: Float_Filter
  """
  ✨ Generated from Field `Lesson`.`duration_min` of type `Int`
  """
  duration_min: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`orderIndex_min` of type `Int`
  """
  orderIndex_min: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`duration_max` of type `Int`
  """
  duration_max: Int_Filter
  """
  ✨ Generated from Field `Lesson`.`orderIndex_max` of type `Int`
  """
  orderIndex_max: Int_Filter
}
"""
✨ Generated key input type for table 'Lesson'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Lesson_Key {
  """
  ✨ Generated from Field `Lesson`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Lesson`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Lesson'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Lesson_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Lesson_Filter
}
"""
✨ Generated order input type for table 'Lesson'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Lesson_Order {
  """
  ✨ Generated from Field `Lesson`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`moduleId` of type `UUID`
  """
  moduleId: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`module` of type `Module`
  """
  module: Module_Order
  """
  ✨ Generated from Field `Lesson`.`contentUrl` of type `String!`
  """
  contentUrl: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`description` of type `String`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`duration` of type `Int`
  """
  duration: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`orderIndex` of type `Int!`
  """
  orderIndex: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`title` of type `String!`
  """
  title: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`type` of type `String!`
  """
  type: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`contentUrl_count` of type `Int!`
  """
  contentUrl_count: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`description_count` of type `Int!`
  """
  description_count: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`duration_count` of type `Int!`
  """
  duration_count: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`moduleId_count` of type `Int!`
  """
  moduleId_count: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`orderIndex_count` of type `Int!`
  """
  orderIndex_count: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`title_count` of type `Int!`
  """
  title_count: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`type_count` of type `Int!`
  """
  type_count: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`duration_sum` of type `Int`
  """
  duration_sum: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`orderIndex_sum` of type `Int`
  """
  orderIndex_sum: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`duration_avg` of type `Float`
  """
  duration_avg: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`orderIndex_avg` of type `Float`
  """
  orderIndex_avg: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`duration_min` of type `Int`
  """
  duration_min: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`orderIndex_min` of type `Int`
  """
  orderIndex_min: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`duration_max` of type `Int`
  """
  duration_max: OrderDirection
  """
  ✨ Generated from Field `Lesson`.`orderIndex_max` of type `Int`
  """
  orderIndex_max: OrderDirection
}
"""
✨ Generated data input type for table 'Module'. It includes all necessary fields for creating or upserting rows into table.
"""
input Module_Data {
  """
  ✨ Generated from Field `Module`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Module`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Module`.`courseId` of type `UUID`
  """
  courseId: UUID
  """
  ✨ `_expr` server value variant of `courseId` (✨ Generated from Field `Module`.`courseId` of type `UUID`)
  """
  courseId_expr: UUID_Expr
  """
  ✨ Generated from Field `Module`.`course` of type `Course`
  """
  course: Course_Key
  """
  ✨ Generated from Field `Module`.`description` of type `String!`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Module`.`description` of type `String!`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Module`.`orderIndex` of type `Int!`
  """
  orderIndex: Int
  """
  ✨ `_expr` server value variant of `orderIndex` (✨ Generated from Field `Module`.`orderIndex` of type `Int!`)
  """
  orderIndex_expr: Int_Expr
  """
  ✨ `_update` server value variant of `orderIndex` (✨ Generated from Field `Module`.`orderIndex` of type `Int!`)
  """
  orderIndex_update: [Int_Update!]
  """
  ✨ Generated from Field `Module`.`title` of type `String!`
  """
  title: String
  """
  ✨ `_expr` server value variant of `title` (✨ Generated from Field `Module`.`title` of type `String!`)
  """
  title_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Module'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Module_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Module_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Module_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Module_Filter!]
  """
  ✨ Generated from Field `Module`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Module`.`courseId` of type `UUID`
  """
  courseId: UUID_Filter
  """
  ✨ Generated from Field `Module`.`course` of type `Course`
  """
  course: Course_Filter
  """
  ✨ Generated from Field `Module`.`description` of type `String!`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Module`.`orderIndex` of type `Int!`
  """
  orderIndex: Int_Filter
  """
  ✨ Generated from Field `Module`.`title` of type `String!`
  """
  title: String_Filter
  """
  ✨ Generated from Field `Module`.`assignments_on_module` of type `[Assignment!]!`
  """
  assignments_on_module: Assignment_ListFilter
  """
  ✨ Generated from Field `Module`.`lessons_on_module` of type `[Lesson!]!`
  """
  lessons_on_module: Lesson_ListFilter
}
"""
✨ Generated first-row input type for table 'Module'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Module_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Module_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Module_Filter
}
"""
✨ Generated having input type for table 'Module'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Module_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Module_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Module_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Module_Having!]
  """
  ✨ Generated from Field `Module`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Module`.`courseId_count` of type `Int!`
  """
  courseId_count: Int_Filter
  """
  ✨ Generated from Field `Module`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Module`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Module`.`orderIndex_count` of type `Int!`
  """
  orderIndex_count: Int_Filter
  """
  ✨ Generated from Field `Module`.`title_count` of type `Int!`
  """
  title_count: Int_Filter
  """
  ✨ Generated from Field `Module`.`orderIndex_sum` of type `Int`
  """
  orderIndex_sum: Int_Filter
  """
  ✨ Generated from Field `Module`.`orderIndex_avg` of type `Float`
  """
  orderIndex_avg: Float_Filter
  """
  ✨ Generated from Field `Module`.`orderIndex_min` of type `Int`
  """
  orderIndex_min: Int_Filter
  """
  ✨ Generated from Field `Module`.`orderIndex_max` of type `Int`
  """
  orderIndex_max: Int_Filter
}
"""
✨ Generated key input type for table 'Module'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Module_Key {
  """
  ✨ Generated from Field `Module`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Module`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Module'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Module_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Module_Filter
}
"""
✨ Generated order input type for table 'Module'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Module_Order {
  """
  ✨ Generated from Field `Module`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Module`.`courseId` of type `UUID`
  """
  courseId: OrderDirection
  """
  ✨ Generated from Field `Module`.`course` of type `Course`
  """
  course: Course_Order
  """
  ✨ Generated from Field `Module`.`description` of type `String!`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Module`.`orderIndex` of type `Int!`
  """
  orderIndex: OrderDirection
  """
  ✨ Generated from Field `Module`.`title` of type `String!`
  """
  title: OrderDirection
  """
  ✨ Generated from Field `Module`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Module`.`courseId_count` of type `Int!`
  """
  courseId_count: OrderDirection
  """
  ✨ Generated from Field `Module`.`description_count` of type `Int!`
  """
  description_count: OrderDirection
  """
  ✨ Generated from Field `Module`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Module`.`orderIndex_count` of type `Int!`
  """
  orderIndex_count: OrderDirection
  """
  ✨ Generated from Field `Module`.`title_count` of type `Int!`
  """
  title_count: OrderDirection
  """
  ✨ Generated from Field `Module`.`orderIndex_sum` of type `Int`
  """
  orderIndex_sum: OrderDirection
  """
  ✨ Generated from Field `Module`.`orderIndex_avg` of type `Float`
  """
  orderIndex_avg: OrderDirection
  """
  ✨ Generated from Field `Module`.`orderIndex_min` of type `Int`
  """
  orderIndex_min: OrderDirection
  """
  ✨ Generated from Field `Module`.`orderIndex_max` of type `Int`
  """
  orderIndex_max: OrderDirection
}
"""
✨ Generated data input type for table 'Submission'. It includes all necessary fields for creating or upserting rows into table.
"""
input Submission_Data {
  """
  ✨ Generated from Field `Submission`.`studentId` of type `UUID!`
  """
  studentId: UUID
  """
  ✨ `_expr` server value variant of `studentId` (✨ Generated from Field `Submission`.`studentId` of type `UUID!`)
  """
  studentId_expr: UUID_Expr
  """
  ✨ Generated from Field `Submission`.`assignmentId` of type `UUID!`
  """
  assignmentId: UUID
  """
  ✨ `_expr` server value variant of `assignmentId` (✨ Generated from Field `Submission`.`assignmentId` of type `UUID!`)
  """
  assignmentId_expr: UUID_Expr
  """
  ✨ Generated from Field `Submission`.`assignment` of type `Assignment!`
  """
  assignment: Assignment_Key
  """
  ✨ Generated from Field `Submission`.`student` of type `User!`
  """
  student: User_Key
  """
  ✨ Generated from Field `Submission`.`feedback` of type `String`
  """
  feedback: String
  """
  ✨ `_expr` server value variant of `feedback` (✨ Generated from Field `Submission`.`feedback` of type `String`)
  """
  feedback_expr: String_Expr
  """
  ✨ Generated from Field `Submission`.`score` of type `Int!`
  """
  score: Int
  """
  ✨ `_expr` server value variant of `score` (✨ Generated from Field `Submission`.`score` of type `Int!`)
  """
  score_expr: Int_Expr
  """
  ✨ `_update` server value variant of `score` (✨ Generated from Field `Submission`.`score` of type `Int!`)
  """
  score_update: [Int_Update!]
  """
  ✨ Generated from Field `Submission`.`studentResponse` of type `String`
  """
  studentResponse: String
  """
  ✨ `_expr` server value variant of `studentResponse` (✨ Generated from Field `Submission`.`studentResponse` of type `String`)
  """
  studentResponse_expr: String_Expr
  """
  ✨ Generated from Field `Submission`.`submissionDate` of type `Timestamp!`
  """
  submissionDate: Timestamp
  """
  ✨ `_expr` server value variant of `submissionDate` (✨ Generated from Field `Submission`.`submissionDate` of type `Timestamp!`)
  """
  submissionDate_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `submissionDate` (✨ Generated from Field `Submission`.`submissionDate` of type `Timestamp!`)
  """
  submissionDate_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `submissionDate` (✨ Generated from Field `Submission`.`submissionDate` of type `Timestamp!`)
  """
  submissionDate_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'Submission'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Submission_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Submission_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Submission_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Submission_Filter!]
  """
  ✨ Generated from Field `Submission`.`studentId` of type `UUID!`
  """
  studentId: UUID_Filter
  """
  ✨ Generated from Field `Submission`.`assignmentId` of type `UUID!`
  """
  assignmentId: UUID_Filter
  """
  ✨ Generated from Field `Submission`.`assignment` of type `Assignment!`
  """
  assignment: Assignment_Filter
  """
  ✨ Generated from Field `Submission`.`student` of type `User!`
  """
  student: User_Filter
  """
  ✨ Generated from Field `Submission`.`feedback` of type `String`
  """
  feedback: String_Filter
  """
  ✨ Generated from Field `Submission`.`score` of type `Int!`
  """
  score: Int_Filter
  """
  ✨ Generated from Field `Submission`.`studentResponse` of type `String`
  """
  studentResponse: String_Filter
  """
  ✨ Generated from Field `Submission`.`submissionDate` of type `Timestamp!`
  """
  submissionDate: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'Submission'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Submission_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Submission_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Submission_Filter
}
"""
✨ Generated having input type for table 'Submission'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Submission_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Submission_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Submission_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Submission_Having!]
  """
  ✨ Generated from Field `Submission`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Submission`.`assignmentId_count` of type `Int!`
  """
  assignmentId_count: Int_Filter
  """
  ✨ Generated from Field `Submission`.`feedback_count` of type `Int!`
  """
  feedback_count: Int_Filter
  """
  ✨ Generated from Field `Submission`.`score_count` of type `Int!`
  """
  score_count: Int_Filter
  """
  ✨ Generated from Field `Submission`.`studentId_count` of type `Int!`
  """
  studentId_count: Int_Filter
  """
  ✨ Generated from Field `Submission`.`studentResponse_count` of type `Int!`
  """
  studentResponse_count: Int_Filter
  """
  ✨ Generated from Field `Submission`.`submissionDate_count` of type `Int!`
  """
  submissionDate_count: Int_Filter
  """
  ✨ Generated from Field `Submission`.`score_sum` of type `Int`
  """
  score_sum: Int_Filter
  """
  ✨ Generated from Field `Submission`.`score_avg` of type `Float`
  """
  score_avg: Float_Filter
  """
  ✨ Generated from Field `Submission`.`score_min` of type `Int`
  """
  score_min: Int_Filter
  """
  ✨ Generated from Field `Submission`.`submissionDate_min` of type `Timestamp`
  """
  submissionDate_min: Timestamp_Filter
  """
  ✨ Generated from Field `Submission`.`score_max` of type `Int`
  """
  score_max: Int_Filter
  """
  ✨ Generated from Field `Submission`.`submissionDate_max` of type `Timestamp`
  """
  submissionDate_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Submission'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Submission_Key {
  """
  ✨ Generated from Field `Submission`.`studentId` of type `UUID!`
  """
  studentId: UUID
  """
  ✨ `_expr` server value variant of `studentId` (✨ Generated from Field `Submission`.`studentId` of type `UUID!`)
  """
  studentId_expr: UUID_Expr
  """
  ✨ Generated from Field `Submission`.`assignmentId` of type `UUID!`
  """
  assignmentId: UUID
  """
  ✨ `_expr` server value variant of `assignmentId` (✨ Generated from Field `Submission`.`assignmentId` of type `UUID!`)
  """
  assignmentId_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Submission'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Submission_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Submission_Filter
}
"""
✨ Generated order input type for table 'Submission'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Submission_Order {
  """
  ✨ Generated from Field `Submission`.`studentId` of type `UUID!`
  """
  studentId: OrderDirection
  """
  ✨ Generated from Field `Submission`.`assignmentId` of type `UUID!`
  """
  assignmentId: OrderDirection
  """
  ✨ Generated from Field `Submission`.`assignment` of type `Assignment!`
  """
  assignment: Assignment_Order
  """
  ✨ Generated from Field `Submission`.`student` of type `User!`
  """
  student: User_Order
  """
  ✨ Generated from Field `Submission`.`feedback` of type `String`
  """
  feedback: OrderDirection
  """
  ✨ Generated from Field `Submission`.`score` of type `Int!`
  """
  score: OrderDirection
  """
  ✨ Generated from Field `Submission`.`studentResponse` of type `String`
  """
  studentResponse: OrderDirection
  """
  ✨ Generated from Field `Submission`.`submissionDate` of type `Timestamp!`
  """
  submissionDate: OrderDirection
  """
  ✨ Generated from Field `Submission`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Submission`.`assignmentId_count` of type `Int!`
  """
  assignmentId_count: OrderDirection
  """
  ✨ Generated from Field `Submission`.`feedback_count` of type `Int!`
  """
  feedback_count: OrderDirection
  """
  ✨ Generated from Field `Submission`.`score_count` of type `Int!`
  """
  score_count: OrderDirection
  """
  ✨ Generated from Field `Submission`.`studentId_count` of type `Int!`
  """
  studentId_count: OrderDirection
  """
  ✨ Generated from Field `Submission`.`studentResponse_count` of type `Int!`
  """
  studentResponse_count: OrderDirection
  """
  ✨ Generated from Field `Submission`.`submissionDate_count` of type `Int!`
  """
  submissionDate_count: OrderDirection
  """
  ✨ Generated from Field `Submission`.`score_sum` of type `Int`
  """
  score_sum: OrderDirection
  """
  ✨ Generated from Field `Submission`.`score_avg` of type `Float`
  """
  score_avg: OrderDirection
  """
  ✨ Generated from Field `Submission`.`score_min` of type `Int`
  """
  score_min: OrderDirection
  """
  ✨ Generated from Field `Submission`.`submissionDate_min` of type `Timestamp`
  """
  submissionDate_min: OrderDirection
  """
  ✨ Generated from Field `Submission`.`score_max` of type `Int`
  """
  score_max: OrderDirection
  """
  ✨ Generated from Field `Submission`.`submissionDate_max` of type `Timestamp`
  """
  submissionDate_max: OrderDirection
}
"""
✨ Generated data input type for table 'User'. It includes all necessary fields for creating or upserting rows into table.
"""
input User_Data {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: String
  """
  ✨ `_expr` server value variant of `displayName` (✨ Generated from Field `User`.`displayName` of type `String!`)
  """
  displayName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String!`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `User`.`major` of type `String`
  """
  major: String
  """
  ✨ `_expr` server value variant of `major` (✨ Generated from Field `User`.`major` of type `String`)
  """
  major_expr: String_Expr
  """
  ✨ Generated from Field `User`.`photoUrl` of type `String`
  """
  photoUrl: String
  """
  ✨ `_expr` server value variant of `photoUrl` (✨ Generated from Field `User`.`photoUrl` of type `String`)
  """
  photoUrl_expr: String_Expr
  """
  ✨ Generated from Field `User`.`role` of type `String!`
  """
  role: String
  """
  ✨ `_expr` server value variant of `role` (✨ Generated from Field `User`.`role` of type `String!`)
  """
  role_expr: String_Expr
}
"""
✨ Generated filter input type for table 'User'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [User_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: User_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [User_Filter!]
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: String_Filter
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String_Filter
  """
  ✨ Generated from Field `User`.`major` of type `String`
  """
  major: String_Filter
  """
  ✨ Generated from Field `User`.`photoUrl` of type `String`
  """
  photoUrl: String_Filter
  """
  ✨ Generated from Field `User`.`role` of type `String!`
  """
  role: String_Filter
  """
  ✨ Generated from Field `User`.`courses_on_instructor` of type `[Course!]!`
  """
  courses_on_instructor: Course_ListFilter
  """
  ✨ Generated from Field `User`.`enrollments_on_student` of type `[Enrollment!]!`
  """
  enrollments_on_student: Enrollment_ListFilter
  """
  ✨ Generated from Field `User`.`submissions_on_student` of type `[Submission!]!`
  """
  submissions_on_student: Submission_ListFilter
  """
  ✨ Generated from Field `User`.`assignments_via_Submission` of type `[Assignment!]!`
  """
  assignments_via_Submission: Assignment_ListFilter
  """
  ✨ Generated from Field `User`.`courses_via_Enrollment` of type `[Course!]!`
  """
  courses_via_Enrollment: Course_ListFilter
}
"""
✨ Generated first-row input type for table 'User'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input User_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [User_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: User_Filter
}
"""
✨ Generated having input type for table 'User'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [User_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: User_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [User_Having!]
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: Int_Filter
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: Int_Filter
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `User`.`major_count` of type `Int!`
  """
  major_count: Int_Filter
  """
  ✨ Generated from Field `User`.`photoUrl_count` of type `Int!`
  """
  photoUrl_count: Int_Filter
  """
  ✨ Generated from Field `User`.`role_count` of type `Int!`
  """
  role_count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'User'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input User_Key {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'User'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input User_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: User_Filter
}
"""
✨ Generated order input type for table 'User'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input User_Order {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: OrderDirection
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `User`.`major` of type `String`
  """
  major: OrderDirection
  """
  ✨ Generated from Field `User`.`photoUrl` of type `String`
  """
  photoUrl: OrderDirection
  """
  ✨ Generated from Field `User`.`role` of type `String!`
  """
  role: OrderDirection
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: OrderDirection
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: OrderDirection
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `User`.`major_count` of type `Int!`
  """
  major_count: OrderDirection
  """
  ✨ Generated from Field `User`.`photoUrl_count` of type `Int!`
  """
  photoUrl_count: OrderDirection
  """
  ✨ Generated from Field `User`.`role_count` of type `Int!`
  """
  role_count: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
}
